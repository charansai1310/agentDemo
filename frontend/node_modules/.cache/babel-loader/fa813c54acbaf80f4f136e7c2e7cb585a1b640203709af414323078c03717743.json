{"ast":null,"code":"var _jsxFileName = \"/Users/charansaikondapaneni/Desktop/agentDemo/frontend/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage({\n  onLogin\n}) {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleLogin = async userType => {\n    setIsLoading(true);\n    setError('');\n    try {\n      // Generate session ID\n      const sessionId = Math.random().toString(36).substr(2, 9);\n\n      // Simulate login process\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const userData = {\n        username: userType,\n        user_type: userType,\n        session_id: sessionId,\n        customer_id: 'CUST-001'\n      };\n      onLogin(userData);\n    } catch (err) {\n      setError('Login failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Audit Management System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select your role to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-btn customer-btn\",\n          onClick: () => handleLogin('Customer'),\n          disabled: isLoading,\n          children: isLoading ? 'Connecting...' : 'Login as Customer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-btn engineer-btn\",\n          onClick: () => handleLogin('Engineer'),\n          disabled: isLoading,\n          children: isLoading ? 'Connecting...' : 'Login as Engineer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"AxZxtnUzare8ll1Rk4kFSeA5V2Q=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","onLogin","_s","isLoading","setIsLoading","error","setError","handleLogin","userType","sessionId","Math","random","toString","substr","Promise","resolve","setTimeout","userData","username","user_type","session_id","customer_id","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/charansaikondapaneni/Desktop/agentDemo/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './LoginPage.css';\n\nfunction LoginPage({ onLogin }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleLogin = async (userType) => {\n    setIsLoading(true);\n    setError('');\n\n    try {\n      // Generate session ID\n      const sessionId = Math.random().toString(36).substr(2, 9);\n      \n      // Simulate login process\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      const userData = {\n        username: userType,\n        user_type: userType,\n        session_id: sessionId,\n        customer_id: 'CUST-001'\n      };\n      \n      onLogin(userData);\n    } catch (err) {\n      setError('Login failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-container\">\n        <div className=\"login-header\">\n          <h1>Audit Management System</h1>\n          <p>Select your role to continue</p>\n        </div>\n        \n        {error && (\n          <div className=\"error-message\">\n            {error}\n          </div>\n        )}\n        \n        <div className=\"login-buttons\">\n          <button\n            className=\"login-btn customer-btn\"\n            onClick={() => handleLogin('Customer')}\n            disabled={isLoading}\n          >\n            {isLoading ? 'Connecting...' : 'Login as Customer'}\n          </button>\n          \n          <button\n            className=\"login-btn engineer-btn\"\n            onClick={() => handleLogin('Engineer')}\n            disabled={isLoading}\n          >\n            {isLoading ? 'Connecting...' : 'Login as Engineer'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}